name: Image build

on:
  workflow_dispatch: # Permet le dÃ©clenchement manuel du workflow
  push:
    paths:
      - Dockerfile
      - versions.awk
      - manifest.yaml

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
      
jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - 
        name: Checkout
        uses: actions/checkout@v4
      - 
        name: Read versions
        id: versions
        run: |
          awk -f versions.awk Dockerfile >> $GITHUB_OUTPUT
      - 
        name: Push Tag with new version
        if: github.ref_name == 'main' && github.ref_type != 'tag'
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2 # https://github.com/mathieudutour/github-tag-action
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: master,main,latest
          custom_tag: ${{ steps.versions.outputs.OTELCOL_VERSION }}-${{ steps.versions.outputs.SYSTEMD_VERSION }}
      - 
        name: Create a GitHub release
        if: github.ref_name == 'main'
        uses: softprops/action-gh-release@v2 # https://github.com/ncipollo/release-action
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ github.repository }} ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
      - 
        name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - 
        name: Install dependencies
        run: |
          set -e
          python -m pip install --upgrade pip
          pip install pyyaml requests
      -
        name: Generate manifest
        run: |
          set -e
          python merge.py --version 0.109.0 >manifest-${{ steps.versions.outputs.OTELCOL_VERSION }}.yaml
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3  # https://github.com/docker/setup-qemu-action
      - 
        name: Set up Docker
        uses: docker/setup-buildx-action@v3  # https://github.com/docker/setup-buildx-action
      - 
        name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4.5.0
      - 
        name: Login to registry ${{ env.REGISTRY }}
        if: github.ref_name == 'main'
        uses: docker/login-action@v3  # https://github.com/docker/login-action
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - 
        name: Extract Docker metadata
        id: metadata
        if: github.ref_name == 'main'
        uses: docker/metadata-action@v5  # https://github.com/docker/metadata-action
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - 
        name: Build app
        uses: docker/build-push-action@v6  # https://github.com/docker/build-push-action
        with:
          push: ${{ github.ref_name == 'main' }}
          context: .
          platforms: linux/amd64
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.versions.outputs.OTELCOL_VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.versions.outputs.OTELCOL_VERSION }}-${{ steps.versions.outputs.SYSTEMD_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
